{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\React\\\\react-demo\\\\src\\\\advanced-learning\\\\form\\\\form.js\";\nimport React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport default class NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inpValue: '',\n      textValue: '请撰写一篇关于你喜欢的 DOM 元素的文章.',\n      selValue: 'coconut'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      inpValue: event.target.value\n    });\n    this.setState({\n      textValue: event.target.value\n    });\n    this.setState({\n      selValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('提交的名字: ' + this.state.inpValue);\n    alert('文本域中的文字: ' + this.state.textValue);\n    alert('下拉框的选中项: ' + this.state.selValue);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <form onSubmit={this.handleSubmit}>\n      //     <div>\n      //         名字:\n      //         <input type=\"text\" value={this.state.inpValue} onChange={this.handleChange}/>\n      //     </div>\n      //     <div>\n      //         文章:\n      //         <textarea value={this.state.textValue} onChange={this.handleChange}/>\n      //     </div>\n      //     <div>\n      //         选择你喜欢的风味:\n      //         <select value={this.state.selValue} onChange={this.handleChange}>\n      //             <option value=\"grapefruit\">葡萄柚</option>\n      //             <option value=\"lime\">酸橙</option>\n      //             <option value=\"coconut\">椰子</option>\n      //             <option value=\"mango\">芒果</option>\n      //         </select>\n      //\n      //         {/*注意:你可以将数组传递到 value 属性中，以支持在 select 标签中选择多个选项：*/}\n      //         {/*<select multiple={true} value={['B', 'C']}>*/}\n      //\n      //     </div>\n      //     <input type=\"submit\" value=\"提交\"/>\n      // </form>\n      React.createElement(Form, Object.assign({}, layout, {\n        name: \"basic\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Input.Password, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, \" Remember me \")), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 5\n        }\n      }, \"Submit\")))\n    );\n  }\n\n}","map":{"version":3,"sources":["D:/OneDrive/React/react-demo/src/advanced-learning/form/form.js"],"names":["React","Form","Input","Button","Checkbox","layout","labelCol","span","wrapperCol","tailLayout","offset","NameForm","Component","constructor","props","state","inpValue","textValue","selValue","handleChange","bind","handleSubmit","event","setState","target","value","alert","preventDefault","render","remember","onFinish","onFinishFailed","required","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Form, Input, Button, Checkbox} from 'antd';\n\nconst layout = {\n    labelCol: {span: 8},\n    wrapperCol: {span: 16},\n};\nconst tailLayout = {\n    wrapperCol: {offset: 8, span: 16},\n};\n\nexport default class NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inpValue: '',\n            textValue: '请撰写一篇关于你喜欢的 DOM 元素的文章.',\n            selValue: 'coconut'\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({inpValue: event.target.value});\n        this.setState({textValue: event.target.value});\n        this.setState({selValue: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('提交的名字: ' + this.state.inpValue);\n        alert('文本域中的文字: ' + this.state.textValue);\n        alert('下拉框的选中项: ' + this.state.selValue);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            // <form onSubmit={this.handleSubmit}>\n            //     <div>\n            //         名字:\n            //         <input type=\"text\" value={this.state.inpValue} onChange={this.handleChange}/>\n            //     </div>\n            //     <div>\n            //         文章:\n            //         <textarea value={this.state.textValue} onChange={this.handleChange}/>\n            //     </div>\n            //     <div>\n            //         选择你喜欢的风味:\n            //         <select value={this.state.selValue} onChange={this.handleChange}>\n            //             <option value=\"grapefruit\">葡萄柚</option>\n            //             <option value=\"lime\">酸橙</option>\n            //             <option value=\"coconut\">椰子</option>\n            //             <option value=\"mango\">芒果</option>\n            //         </select>\n            //\n            //         {/*注意:你可以将数组传递到 value 属性中，以支持在 select 标签中选择多个选项：*/}\n            //         {/*<select multiple={true} value={['B', 'C']}>*/}\n            //\n            //     </div>\n            //     <input type=\"submit\" value=\"提交\"/>\n            // </form>\n\n            < Form\n        {...\n            layout\n        }\n        name = \"basic\"\n        initialValues = {\n        {\n            remember: true\n        }\n    }\n        onFinish = {onFinish}\n        onFinishFailed = {onFinishFailed}\n            >\n            < Form.Item\n        label = \"Username\"\n        name = \"username\"\n        rules = {[{required: true, message: 'Please input your username!'}]}\n            >\n            < Input / >\n            < /Form.Item>\n\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{required: true, message: 'Please input your password!'}]}\n        >\n            <Input.Password/>\n        </Form.Item>\n\n        < Form.Item\n        {...\n            tailLayout\n        }\n        name = \"remember\"\n        valuePropName = \"checked\" >\n            < Checkbox > Remember\n        me < /Checkbox>\n    </Form.Item>\n\n    <Form.Item {...tailLayout}>\n    <Button type=\"primary\" htmlType=\"submit\">\n    Submit\n    </Button>\n    </Form.Item>\n    </Form>\n    );\n    }\n    }\n"]},"metadata":{},"sourceType":"module"}